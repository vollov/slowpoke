"use strict";angular.module("demoApp",["ui.router","auth"]).config(["$stateProvider","$locationProvider","$urlRouterProvider","$httpProvider",function(e,t,r,o){e.state("home",{url:"/home",templateUrl:"views/home.html",data:{requireLogin:!1}}).state("about",{url:"/about",templateUrl:"views/about.html",data:{requireLogin:!1}}).state("users",{url:"/users",templateUrl:"views/users.html",controller:"UserCtrl",controllerAs:"vm",data:{requireLogin:!1}}),t.hashPrefix(""),r.otherwise("home")}]).run(["$rootScope","$state","$http","AuthService",function(e,t,r,o){r.defaults.xsrfHeaderName="X-CSRFToken",r.defaults.xsrfCookieName="csrftoken",e.$on("$stateChangeStart",function(e,r,n){var i=r.data.requireLogin;console.log("state change event, isAuthenticated=%s",o.isAuthenticated()),i&&!o.isAuthenticated()&&(e.preventDefault(),console.log("state change event -- unauthorized"),t.go("login"))})}]),angular.module("cfg",[]).factory("cfgService",[function(){var e={api_host:"localhost:3012",api_root:"/api/v1.0",token_key:"slowpoke-token"};return e.get=function(t){return console.log("getting key="+e[t]),e[t]},e.getApiUrl=function(){return"http://"+e.api_host+e.api_root},e}]),angular.module("auth.controllers",["auth.services"]).controller("NavCtrl",["$state","AuthService",function(e,t){var r=this;r.isAuthenticated=function(){var e=t.isAuthenticated();return console.log("NavCtrl.isAuthenticated() res ="+e),e},r.user=t.getToken("ocbl.user"),r.logout=function(){console.log("NavCtrl.logout()"),t.logout(),e.go("home")}}]).controller("ProfileCtrl",["AuthService","profile",function(e,t){var r=this;r.profile=t}]).controller("RegisterCtrl",["$state","AuthService",function(e,t){var r=this;r.register=function(){function o(r,o,n,i){var l=r.token;console.log("login success, got token from server, token=%j",l),t.saveToken(l),t.getUser()?e.go("profile",{username:user.username}):console.error("login failure! could not parse username from token")}return t.register(r.user).then(o,registerErrorFn)}}]).controller("LoginCtrl",["$state","AuthService",function(e,t){var r=this;r.user={},r.login=function(){function o(r,o,n,i){var l=r.token;console.log("login success, got token from server, token=%j",l),t.saveToken(l),t.getUser()?e.go("profile",{username:user.username}):console.error("login failure! could not parse username from token")}function n(e,t,o,n){r.error=e.message,console.error("login failure! message={0}",e.message)}console.log("in LoginCtrl.login() user = {0}",r.user.username),t.login(r.user).then(o,n)}}]),angular.module("auth",["auth.controllers","ui.router"]).config(["$stateProvider",function(e){e.state("login",{url:"/login",templateUrl:"js/auth/views/login.html",controller:"LoginCtrl",controllerAs:"vm",onEnter:["$state","AuthService",function(e,t){t.isAuthenticated()&&e.go("home")}],data:{requireLogin:!1}}).state("register",{url:"/register",templateUrl:"js/auth/views/register.html",controller:"RegisterCtrl",controllerAs:"vm",onEnter:["$state","AuthService",function(e,t){t.isAuthenticated()&&e.go("home")}],data:{requireLogin:!1}}).state("profile",{url:"/profile/:username",templateUrl:"js/auth/views/profile.html",controller:"ProfileCtrl",controllerAs:"vm",resolve:{profile:["$stateParams",function(e){return console.log("profile username="+e.username),e.username}]},data:{requireLogin:!1}})}]),angular.module("auth.services",["cfg"]).factory("AuthService",["$http","cfgService",function(e,t){var r={users:[],roles:[],key:"user-list"};return r.saveToken=function(e){localStorage.setItem(t.token_key,JSON.stringify(e))},r.getToken=function(){return localStorage.getItem(t.token_key)},r.getUser=function(){if(r.isAuthenticated()){var e=r.getToken();return JSON.parse($window.atob(e.split(".")[1])).username}return null},r.isAuthenticated=function(){var e=r.getToken();if(console.log("in service.isAuthenticated token="+e),e&&"undefined"!=e){var t=JSON.parse($window.atob(e.split(".")[1]));return console.log("in service.isAuthenticated payload={0}",t),t.exp>Date.now()/1e3}return!1},r.register=function(r){return e.post(t.getApiUrl()+"/register",r)},r.login=function(r){return e.post(t.getApiUrl()+"/login",r)},r.logout=function(){console.log("AuthService.logout()"),localStorage.removeItem("authenticated"),localStorage.removeItem("ocbl.user")},r}]);